#BlueJ class context
comment0.target=BackDoorModel
comment0.text=\r\n\ Implements\ the\ Model\ of\ the\ back\ door\ client\r\n\ @author\ \ Mike\ Smith\ University\ of\ Brighton\r\n\ @version\ 1.0\r\n
comment1.params=mf
comment1.target=BackDoorModel(middle.MiddleFactory)
comment1.text=\r\n\ Construct\ the\ model\ of\ the\ back\ door\ client\r\n\ @param\ mf\ The\ factory\ to\ create\ the\ connection\ objects\r\n
comment2.params=
comment2.target=catalogue.Basket\ getBasket()
comment2.text=\r\n\ Get\ the\ Basket\ of\ products\r\n\ @return\ basket\r\n
comment3.params=productNum
comment3.target=void\ doCheck(java.lang.String)
comment3.text=\r\n\ Check\ The\ current\ stock\ level\r\n\ @param\ productNum\ The\ product\ number\r\n
comment4.params=productNum
comment4.target=void\ doQuery(java.lang.String)
comment4.text=\r\n\ Query\ \r\n\ @param\ productNum\ The\ product\ number\ of\ the\ item\r\n
comment5.params=productNum\ quantity
comment5.target=void\ doRStock(java.lang.String,\ java.lang.String)
comment5.text=\r\n\ Re\ stock\ \r\n\ @param\ productNum\ The\ product\ number\ of\ the\ item\r\n\ @param\ quantity\ How\ many\ to\ be\ added\r\n
comment6.params=
comment6.target=void\ doClear()
comment6.text=\r\n\ Clear\ the\ product()\r\n
comment7.params=
comment7.target=catalogue.Basket\ makeBasket()
comment7.text=\r\n\ return\ an\ instance\ of\ a\ Basket\r\n\ @return\ a\ new\ instance\ of\ a\ Basket\r\n
numComments=8
